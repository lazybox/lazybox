initSidebarItems({"constant":[["MAX_COLOR_TARGETS","Compile-time maximum number of color targets."],["MAX_CONSTANT_BUFFERS","Compile-time maximum number of constant buffers."],["MAX_RESOURCE_VIEWS","Compile-time maximum number of shader resource views (SRV)."],["MAX_SAMPLERS","Compile-time maximum number of samplers."],["MAX_UNORDERED_VIEWS","Compile-time maximum number of unordered access views (UAV)."],["MAX_VERTEX_ATTRIBUTES","Compile-time maximum number of vertex attributes."]],"enum":[["IndexType","A type of each index value in the slice's index buffer"],["Primitive","Describes what geometric primitives are created from vertex data."],["ShaderSet","A complete set of shaders to link a program."]],"mod":[["buffer","Memory buffers"],["command","Command Buffer device interface"],["dummy","Dummy backend implementation to test the code for compile errors outside of the graphics development environment."],["factory","Resource factory"],["format","Universal format specification. Applicable to textures, views, and vertex buffers."],["handle","Resource handles"],["mapping","Memory mapping"],["memory","Memory stuff"],["pso","Raw Pipeline State Objects"],["shade","Shader handling."],["state","Fixed-function hardware state."],["target","Render target specification."],["texture","Texture creation and modification."]],"struct":[["Capabilities","Features that the device supports."],["DomainShader",""],["GeometryShader",""],["HullShader",""],["PixelShader",""],["VertexShader",""]],"trait":[["Device","A `Device` is responsible for submitting `CommandBuffer`s to the GPU."],["Resources","Different types of a specific API."]],"type":[["AttributeSlot","Slot for an attribute."],["ColorSlot","Slot for an active color buffer."],["ConstantBufferSlot","Slot for a constant buffer object."],["InstanceCount","Draw number of instances"],["PatchSize","Number of vertices in a patch"],["ResourceViewSlot","Slot for a shader resource view."],["SamplerSlot","Slot for a sampler."],["UnorderedViewSlot","Slot for an unordered access object."],["VertexCount","Draw vertex count."]]});