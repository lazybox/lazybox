initSidebarItems({"constant":[["ALPHA",""],["BLUE",""],["GREEN",""],["MASK_ALL",""],["MASK_NONE",""],["RED",""]],"enum":[["BlendValue",""],["Comparison","A pixel-wise comparison function."],["CullFace","Which face, if any, to cull."],["Equation",""],["Factor",""],["FrontFace","The front face winding order of a set of vertices."],["RasterMethod","How to rasterize a primitive."],["StencilOp","Stencil mask operation."]],"struct":[["Blend",""],["BlendChannel",""],["Color","The state of an active color render target"],["ColorMask",""],["Depth","Depth test state."],["MultiSample","Multi-sampling rasterization mode"],["Offset","How to offset vertices in screen space, if at all."],["Rasterizer","Primitive rasterization state. Note that GL allows different raster method to be used for front and back, while this abstraction does not."],["RefValues","The complete set of the rasterizer reference values. Switching these doesn't roll the hardware context."],["Stencil","Complete stencil state, specifying how to handle the front and back side of a face."],["StencilSide","Complete stencil state for a given side of a face."]],"type":[["LineWidth","Width of a line. Could be f32 if not for Hash deriving issues."],["OffsetSlope","Slope depth offset factor Could be f32 if not for Hash deriving issues."],["OffsetUnits","Number of units to offset, where the unit is the minimal difference in the depth value dictated by the precision of the depth buffer."]]});