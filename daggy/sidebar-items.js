initSidebarItems({"mod":[["walker","**Walker** is a trait providing a variety of useful methods for traversing graph types."]],"struct":[["Children","A **Walker** type that can be used to step through the children of some parent node."],["Dag","A Directed acyclic graph (DAG) data structure."],["EdgeIndex","Edge identifier."],["EdgeIndices","An iterator yielding multiple `EdgeIndex`s, returned by the `Graph::add_edges` method."],["EdgeWeightsMut","Iterator yielding mutable access to all edge weights."],["NodeIndex","Node identifier."],["NodeWeightsMut","Iterator yielding mutable access to all node weights."],["Parents","A **Walker** type that can be used to step through the children of some parent node."],["WouldCycle","An error returned by the `Dag::add_edge` method in the case that adding an edge would have caused the graph to cycle."]],"type":[["PetGraph","The Petgraph to be used internally within the Dag for storing/managing nodes and edges."],["RawEdges","Read only access into a **Dag**'s internal edge array."],["RawNodes","Read only access into a **Dag**'s internal node array."],["RecursiveWalk","An alias to simplify the **Recursive** **Walker** type returned by **Dag**."]]});